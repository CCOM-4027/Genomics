#!/usr/bin/python
import os, sys, argparse
import parsingfasta as parse

extensions = ['.fasta',',gbk','sam']

parser = argparse.ArgumentParser()
parser.add_argument('-i', '--input')
parser.add_argument('-of', '--output file')
parser.add_argument('-q', '--query')
args = parser.parse_args()

def file2seqs(filename):
    print "converting file",filename, "to sequence object"
    return parse.file_to_entries(filename)

def make_file(sequences, filename):
    if parse.extension(filename) in extensions:
        print "file", filename, "created with the following sequences"
        for sequence in sequences:
            print "\t", sequence.id
    else:
        print "Error: specified invalid file extension for output"

def add2db(entries):
    print "adding the following entries to the database:"
    for entry in entries:
        print "\t", entry.location

def eval_query(query):
    print "Query sent:", query
    return laad.query(query)


sequences = []
if args.input:
    if not os.path.exists(args.input): 
        print "File or directory does not exist"
    else:
        def add2sequences(file):
            if parse.extension(file) in extensions:
                sequences.extend(file2seqs(file))

        if os.path.isdir(args.input):
            for filename in os.listdir(args.input):
                add2sequences(filename)
        else: 
            add2sequences(args.input)
    add2db(sequences)

if args.query:
    print args.query
    sequences = eval_query(args.query)
#    laad.query(args.query)

if args.output:
    make_file(sequences, args.output)
